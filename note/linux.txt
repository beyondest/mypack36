lscpu
lsgpu
lshw
free -h     //cat system running memory (16g often)
top         //show more system pid and running memory too
df -h       //show total disk status
sudo apt-get install ubuntu-desktop
sudo systemctl start lightdm            //set default show service

systemctl reset-failed
how to set proxy for wsl:open clash allow lan，download service mode ，open tun mode ， enable firewall（a shield icon in General page）

du -sh *           //show each folder size in pwd
du -sh .*          //show total pwd size
du -sh             //same as up
du -sh --exclude=mnt -sh *    
du -sh * |sort -rh  //show in order
du -sh .[!.]*|sort -rh //show hidden files size .local/share/Trash !!!

sudo logrotate -f /etc/logrotate.d/my_logrotate //config custom logrotate
sudo logrotate -vf /etc/logrotate.conf


the content is as below:
/var/log/*.log {
    su root root
    size 100M
    rotate 4
    compress
    missingok
    notifempty
    create 0644 root root
}

python3 --version   //python3.6.9
python3 -m venv myenv   //make virtual env for python369
source myenv/bin/activate


/home/liyuxuan/proxy/proxy.sh
~/.bashrc   alias proxy="source /home/liyuxuan/proxy/proxy.sh"

proxy set
proxy unset
proxy test

mv /path/to/source_file /path/to/destination_directory/         //move file to anoter path

cp -r /pathq1/* /path2            //copy file recursively
 

git add .
git commit -m "my first commit"
git reflog
git reset --soft hash
git push remote_name master:master
git pull --rebase remote_name master:master
git pull remote_name master:master
git branch -a   show all branch
git branch -r   show remote branch
git branch new_branch_name
git branch -d deleted_branch
git branch -m old_name new_name



tar -czvf file.tar.gz file1 file2
tar -xzvf file.tar.gz -C /destination_directory
unrar x target.rar -d /destination_directory


eog img.jpg
eog img.png
identify img.png

pip3 install --proxy http://172.23.32.1:7890    //pip3 need to set proxy alone, even use proxy.sh
Or you just have to add this: vim /etc/pip.conf : [global] \n proxy = https:***:***


sudo apt-get install -y *** //auto use yes
sudo apt update


dotnet new console    //create c# project in pwd
dotnet run

while [[ "$PWD" != "/" ]] && [ ! -d "build" ]; do cd ..; done &&[ -d "build" ] && cd "build"    //ways to find build by keep searching

find . -type f -ctime -0.083 //type:f = folder only, ctime:0.083= 2 hours



ssh-keygen -f ~/.ssh/github -t ed25519 -C "for github" //generate a pare of key_ssh
eval $(ssh-agent -s)         //activate ssh-agent, you can add to bashrc to open autoly
ssh-add ~/.ssh/github        //add specified private key to ssh-agent, now you can git push to git@github.com:beyondest/repo.git
sudo vim /etc/ssh/sshd_config  //In remote linux , config AuthorizedKeysFile .ssh/authorized_keys and add PubkeyAuthentication yes
sudo vim ~/.ssh/authorized_keys //copy nx1.pub to remote linux, ssh-add nx at local

//not work
 adb shell am start -a android.media.action.VIDEO_CAPTURE &&adb shell screenrecord --output-format=h264 --size 720x1280 - | nc -l 127.0.0.1 9006

//work but screen
 adb exec-out screenrecord --output-format=h264 - |    ffplay -framerate 60 -probesize 32 -sync video  -


//run adb_handler.py then run adb_camera.py or just do as below
adb forward tcp:8080 tcp:8080   //set as port in android ipwebcam
"rtsp://127.0.0.1:8080/h264_pcm.sdp"

192.168.1.123
rcclub509daisuki

lsof -i -n      //show tcp port status
ss -tuln        //show tcp/udp port status


make custom python pack:
--mypack
        |--mypack1-
                __init__.py
        |--mypack2-
                __init__.py
        |--setup.py

write setup() in setup.py
python setup.py bdist_wheel
cd dist
pip install mypack-version-py3-none-any.whl


free up space by clean systemd journal logs
journalctl --disk-usage
sudo journalctl --vacuum-time=3d

free up space by clean snaps
sudo ~/shellscripts/myclean.sh

add present user to tty group
sudo usermod -aG tty $USER



wsl enabel usb driver can communication and other features origin linux have

steps:
        1. Download microsoft official wsl2 kernel version to latest
        2. cd folder you unzip or untar, than do as follows:
                zcat /proc/config.gz > .config
                make menuconfig
        3. In terminal of menuconfig, choose features you want to enabel , y is include to kernel, m is build as modules
        4. exit and save, then do as follows:
                #build modules
                make modules -j $(nproc)
                sudo make modules_install
                #build kernel
                make -j (nproc)
                sudo make install
                cp vmlinux /mnt/c/Users/liyuxuan/wsl_kernel

        5. Edit .wslconfig:
                [wsl2]
                kernel=C:\\Users\\liyuxuan\\vmlinux
        6. Restart wsl2, done


usbipd using on wsl2:
        In windows administor powershell: usbipd bind --busid=4-3
        In wsl2: sudo usbip attach -r localhost --busid=4-3
        
        sudo ufw allow 3240/tcp
        sudo usbip detach -p 0/1/2  //use usbip port to see what port 


proxy set in jetson nx:
        sudo visudo:
                add "rcclub ALL=(ALL:ALL) NOPASSWD: /home/rcclub/ggbond/change.sh"
        vim ~/.bashrc:
                add "sudo ~/ggbond/change.sh"
                add ". ~/ggbond/proxy.sh set"
        that is all, you will not enter passwd again and again



WSL2 hyper-V firewall:
        only when this is enabled in CLASH, wsl bridge can connect to proxy 7890, so you need to run in NAT mode first and then turn to bridge mode?
                vEthernet (WSL (Hyper-V firewall))
                Address:
                172.22.224.1
                Netmask:
                255.255.240.0 (20)
                MAC:
                00:15:5d:95:5a:c6

WSL hyper-V vEthernet:
        you have to disable Large send offload version2 ipv4
                            Large send offload version2 ipv6
        in vEthernet card configure 


//Display settings: set display monitor to power off after 1 hour idle  
xset +dpms
xset dpms 0 0 3600

xset -q         // check present xset config


pip3 install XXX==Version --no-deps